SPV_INTEL_bindless_images
=========================

== Name Strings

SPV_INTEL_bindless_images

== Contact

To report problems with this extension, please open a new issue at:

<https://github.com/intel/llvm/issues>

== Contributors

- Duncan Brawley, Codeplay
- Przemek Malon, Codeplay
- Peter Žužek, Codeplay
- Chedy Najjar, Codeplay

== Notice

Copyright © Codeplay Software Limited. All rights reserved.

== Status

In Development

== Version

[width="40%",cols="25,25"]
|========================================
| Last Modified Date | 2023-03-17
| Revision           | 1
|========================================

== Dependencies

This extension is written against the SPIR-V Specification,
Verison 1.6 Revision 1.

This extension requires SPIR-V 1.0.

== Overview

This extension adds support for bindless images.
This is done by adding support for SPIR-V to convert unsigned integer handles to images/samplers.

Bindless images are a feature that provides flexibility on how images are accessed and used, such as removing limitations on how many images can be accessed as well as potentially improving performance.
This is an improvement on the legacy of binding images which is a holdover from binding slots in hardware which used to be limited in number.

== Extension Name

To use this extension within a SPIR-V module, the following *OpExtension* must be present in the module:

----
OpExtension "SPV_INTEL_bindless_images"
----

== New Capabilities

This extension introduces a new capability:

----
BindlessImagesIntel
----

== New Instructions

Instructions added under *BindlessImagesIntel* capability.

----
OpHandleAddressingModeINTEL
OpConvertHandleToImageINTEL
OpConvertHandletoSamplerINTEL
OpConvertHandleToSampledImageINTEL
----

== Token Number Assignments

--
[width="40%"]
[cols="70%,30%"]
[grid="rows"]
|====
|BindlessImagesIntel                |0000
|OpHandleAddressingModeINTEL     |0000
|OpConvertHandleToImageINTEL        |0000
|OpConvertHandletoSamplerINTEL      |0000
|OpConvertHandleToSampledImageINTEL |0000
|====
--

== Modifications to the SPIR-V Specification, Version 1.6

(Modify section 2.4, Logical layout of a Module)
[start=4]
4. The single required OpMemoryModel instruction.
5. Optional bindless handle size defined with OpHandleAddressingModeINTEL
6. All entry point declarations, using OpEntryPoint.

(Add to the table in 3.42.10, Image Instructions)

[cols="2*1,3*2"]
|======
5+|[[OpHandleAddressingModeINTEL]]*OpHandleAddressingModeINTEL* +
 +
Set either 32 or 64 bit width for bindless handles.

Only takes a value of either 32 or 64.
Any other value is invalid.
Required for use of this extension and is only set once.

| 4 | 0000 | '<id> Result Type' | 'Result <id>' | '<id> Operand'
|======

[cols="2*1,3*2"]
|======
5+|[[OpConvertHandleToImageINTEL]]*OpConvertHandleToImageINTEL* +
 +
Accepts an unsigned integer and converts to image type.

Unsigned integer is either a 64 or 32 bit unsigned integer.
Depending on *OpHandleAddressingModeINTEL*.

| 4 | 0000 | '<id> Result Type' | 'Result <id>' | '<id> Operand'
|======

[cols="2*1,3*2"]
|======
5+|[[OpConvertHandletoSamplerINTEL]]*OpConvertHandletoSamplerINTEL* +
 +
Accepts an unsigned integer and converts to sampler type.

Unsigned integer is either a 64 or 32 bit unsigned integer.
Depending on *OpHandleAddressingModeINTEL*.

| 4 | 0000 | '<id> Result Type' | 'Result <id>' | '<id> Operand'
|======

[cols="2*1,3*2"]
|======
5+|[[OpConvertHandleToSampledImageINTEL]]*OpConvertHandleToSampledImageINTEL* +
 +
Accepts an unsigned integer and converts to sampled image type.

Unsigned integer is either a 64 or 32 bit unsigned integer.
Depending on *OpHandleAddressingModeINTEL*.

| 4 | 0000 | '<id> Result Type' | 'Result <id>' | '<id> Operand'
|======


== Issues

None Yet.

== Revision History

[cols="5,15,15,70"]
[grid="rows"]
[options="header"]
|========================================
|Rev|Date|Author|Changes
|1|2023-03-17|Duncan Brawley|*Initial public release*
|========================================

